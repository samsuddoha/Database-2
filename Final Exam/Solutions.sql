
company(id, name, city, contact)
bus(bus_id, bus_name, model, compnay_id)
driver(d_id, name, phone, license_no, city, bus_id)
passenger(p_id, first_name, last_name, gender, email, phone)
book_ticket(t_id, passenger_id, bus_id, route_id, journey_date, seat_no)
payment(payment_id, passenger_id, bus_id, amount)

--Q1: List all buses along with their respective company names.
SELECT bus.bus_id, bus.bus_name, bus.model, company.name AS company_name
FROM bus, company 
WHERE bus.company_id = company.id;


--Q2: Find all drivers who work for ‘SR Group’.
SELECT driver.d_id, driver.name, driver.phone, driver.license_no, driver.city
FROM driver
INNER JOIN bus ON driver.bus_id = bus.bus_id
INNER JOIN company ON bus.company_id = company.id
WHERE company.name = 'SR Group';

--Q3: Count the number of passengers who have booked tickets for the bus named ‘Alam’.
SELECT COUNT(book_ticket.passenger_id) AS passenger_count
FROM book_ticket
INNER JOIN bus ON book_ticket.bus_id = bus.bus_id
WHERE bus.bus_name = 'Alam';

--Q4: Find the average payment for each employee.
SELECT passenger_id, AVG(amount) AS average_payment
FROM payment
GROUP BY passenger_id;

--Q5: Find the total number of buses for each company.
SELECT company.name AS company_name, COUNT(bus.bus_id) AS total_buses
FROM company, bus 
WHERE company.id = bus.company_id
GROUP BY company.name;

--Q6: Find all passengers who use Banglalink phone number.
--Hints: phone number starts with 019 or 014
SELECT * 
FROM passenger
WHERE phone LIKE '019%' OR phone LIKE '014%';

--Q7:List the details of passengers who have made more than one payment.
SELECT passenger.*
FROM passenger, payment 
WHERE passenger.p_id = payment.passenger_id
GROUP BY passenger.p_id
HAVING COUNT(payment.payment_id) > 1;

--Q8: List the details of the top 3 most frequently traveled passengers.
SELECT passenger.p_id, passenger.first_name, passenger.last_name, passenger.gender, 
passenger.email, passenger.phone, COUNT(book_ticket.t_id) AS travel_count
FROM passenger, book_ticket 
WHERE passenger.p_id = book_ticket.passenger_id
GROUP BY passenger.p_id
ORDER BY travel_count DESC
LIMIT 3;

--Q9: Create a view for the following problem:
--Find the name (first_name and last_name), email, phone of all passengers.
CREATE VIEW passenger_contact_info AS
SELECT first_name, last_name, email, phone
FROM passenger;

 --Q10: Find the total revenue generated by each company.
SELECT company.name AS company_name, SUM(payment.amount) AS total_revenue
FROM company, bus, payment
WHERE company.id = bus.company_id AND bus.bus_id = payment.bus_id
GROUP BY company.name;

